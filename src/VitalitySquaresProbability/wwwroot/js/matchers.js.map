{"version":3,"sources":["matchers.ts"],"names":["beforeEach","jasmine","addMatchers","toContainText","compare","actual","expectedText","actualText","textContent","pass","indexOf",{"end":{"file":"?","comments_before":[],"nlb":false,"endpos":358,"endcol":35,"endline":9,"pos":351,"col":28,"line":9,"value":"message","type":"name"},"start":{"file":"?","comments_before":[],"nlb":false,"endpos":358,"endcol":35,"endline":9,"pos":351,"col":28,"line":9,"value":"message","type":"name"},"name":"message"},"message"],"mappings":"AAAAA,WAAW,WACPC,QAAQC,aACJC,cAAe,WACX,OACIC,QAAS,SAASC,EAAQC,GACtB,GAAIC,GAAaF,EAAOG,WACxB,QACIC,KAAMF,EAAWG,QAAQJ,GAAgB,GACzCK,GAAIC,WAAYA,MAAOA,YAAcA,EAAaA,eAAiBA","file":"matchers.js","sourcesContent":["beforeEach(() => {\r\n    jasmine.addMatchers({\r\n        toContainText: function() {\r\n            return {\r\n                compare: function(actual, expectedText) {\r\n                    var actualText = actual.textContent;\r\n                    return {\r\n                        pass: actualText.indexOf(expectedText) > -1,\r\n                        get message() { return 'Expected ' + actualText + ' to contain ' + expectedText; }\r\n                    };\r\n                }\r\n            };\r\n        }\r\n    });\r\n});\r\n"],"sourceRoot":"/source/"}