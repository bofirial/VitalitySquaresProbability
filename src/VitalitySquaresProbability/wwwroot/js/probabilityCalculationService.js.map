{"version":3,"sources":["probabilityCalculationService.js","probabilityCalculationService.ts"],"names":["__decorate","this","decorators","target","key","desc","Reflect","decorate","arguments","length","reduceRight","o","d","__metadata","k","v","metadata","angular2_1","require","ProbabilityCalculationService","ProbabilityCalculationService.factorial","ProbabilityCalculationService.combination","ProbabilityCalculationService.hypergeometricProbability","exports"],"mappings":"AACA,GAAIA,YAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAAuB,gBAAZC,UAAoD,kBAArBA,SAAQC,SAAyB,MAAOD,SAAQC,SAASL,EAAYC,EAAQC,EAAKC,EAC5H,QAAQG,UAAUC,QACd,IAAK,GAAG,MAAOP,GAAWQ,YAAY,SAASC,EAAGC,GAAK,MAAQA,IAAKA,EAAED,IAAOA,GAAMR,EACnF,KAAK,GAAG,MAAOD,GAAWQ,YAAY,SAASC,EAAGC,GAAK,YAAQA,GAAKA,EAAET,EAAQC,KAAkB,OAChG,KAAK,GAAG,MAAOF,GAAWQ,YAAY,SAASC,EAAGC,GAAK,MAAQA,IAAKA,EAAET,EAAQC,EAAKO,IAAOA,GAAMN,KAGpGQ,WAAcZ,MAAQA,KAAKY,YAAe,SAAUC,EAAGC,GACvD,MAAuB,gBAAZT,UAAoD,kBAArBA,SAAQU,SAAgCV,QAAQU,SAASF,EAAGC,GAAtG,QCRJE,WAAAC,QAAyB,qBAEzBC,8BAAA,WAGIA,QAAAA,MAiCJA,MA9BYA,GAAAA,UAAAA,UAARA,SAAkBA,GACdC,MAAQA,GAAJA,EACOA,EAGDA,IAANA,EACOA,EAEAA,EAAIA,KAAKA,UAAUA,EAAIA,IAI9BD,EAAAA,UAAAA,YAARA,SAAoBA,EAAWA,GAE3BE,MAAIA,GAAIA,EACGA,EAGJA,KAAKA,UAAUA,IAAIA,KAAKA,UAAUA,GAAGA,KAAKA,UAAUA,EAAEA,KAGjEF,EAAAA,UAAAA,0BAAAA,SAA0BA,EAAoBA,EAAwBA,EAAkBA,GAEpFG,MAAIA,GAAoBA,EAEbA,EAGJA,KAAKA,YAAYA,EAAgBA,GAAqBA,KAAKA,YAAYA,EAAWA,EAAgBA,EAASA,GAAqBA,KAAKA,YAAYA,EAAYA,IAlC5KH,EAAAA,YAACA,WAAAA,aDqCON,WAAW,yBACZM,KCrCMI,SAAAJ,8BAA6BA","file":"probabilityCalculationService.js","sourcesContent":[null,"/// <reference path=\"./../../node_modules/angular2/angular2.d.ts\" />\r\n\r\nimport {Injectable} from 'angular2/angular2';\r\n\r\n@Injectable()\r\nexport class ProbabilityCalculationService {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    private factorial(n: number): number {\r\n        if (n < 0) {\r\n            return 0;\r\n        }\r\n\r\n        if (n === 0) {\r\n            return 1;\r\n        } else {\r\n            return n * this.factorial(n - 1);\r\n        }\r\n    }\r\n\r\n    private combination(n: number, r: number): number {\r\n\r\n        if (r > n) {\r\n            return 0;\r\n        }\r\n\r\n        return this.factorial(n)/(this.factorial(r)*this.factorial(n-r));\r\n    }\r\n\r\n    hypergeometricProbability(totalItems: number, totalSuccesses: number, selected: number, selectedSuccesses: number): number {\r\n        \r\n        if (selectedSuccesses > selected)\r\n        {\r\n            return 0;\r\n        }\r\n\r\n        return this.combination(totalSuccesses, selectedSuccesses) * this.combination(totalItems-totalSuccesses, selected-selectedSuccesses) / this.combination(totalItems, selected);\r\n    }\r\n}"],"sourceRoot":"/source/"}