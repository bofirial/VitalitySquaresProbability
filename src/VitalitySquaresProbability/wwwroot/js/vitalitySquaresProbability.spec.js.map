{"version":3,"sources":["vitalitySquaresProbability.spec.ts"],"names":["testing_1","require","vitalitySquaresProbability_1","testUtilities_1","describe","it","vspComponent","VspComponent","expect","title","toEqual","injectAsync","TestComponentBuilder","tcb","createAsync","then","fixture","detectChanges","debugElement","componentInstance","toBe","metadata","getComponentMetadata","template","toContain","selector","compiled","nativeElement","toContainText"],"mappings":"AAGA,GAAAA,WAAAC,QAAoD,oBAEpDC,6BAAAD,QAA2B,gCAE3BE,gBAAAF,QAAmC,uBAEnCG,UAAS,eAAgB,WAErBJ,UAAAK,GAAG,sBAAuB,WACtB,GAAIC,GAAe,GAAIJ,8BAAAK,YACvBC,QAAOF,EAAaG,OAAOC,QAAQ,kCAGvCV,UAAAK,GAAG,6DAA8DL,UAAAW,aAAaX,UAAAY,sBAAuB,SAACC,GAClG,MAAOA,GAAIC,YAAYZ,6BAAAK,cAAcQ,KAAK,SAACC,GACnCA,EAAQC,gBAERT,OAAOQ,EAAQE,aAAaC,kBAAkBV,OAAOW,KAAK,qCAKtEpB,UAAAK,GAAG,wCAAyC,WAExC,GAAIgB,GAAWlB,gBAAAmB,qBAAqBpB,6BAAAK,aAEpCC,QAAOa,EAASE,UAAUC,UAAU,eAGxCxB,UAAAK,GAAG,gEAAiE,WAEhE,GAAIgB,GAAWlB,gBAAAmB,qBAAqBpB,6BAAAK,aAEpCC,QAAOa,EAASE,UAAUC,UAAU,2BAGxCxB,UAAAK,GAAG,6BAA8B,WAE7B,GAAIgB,GAAWlB,gBAAAmB,qBAAqBpB,6BAAAK,aAEpCC,QAAOa,EAASI,UAAUL,KAAK,SAGnChB,SAAS,sBAAuB,WAE5BJ,UAAAK,GAAG,wCAAyCL,UAAAW,aAAaX,UAAAY,sBAAuB,SAACC,GAC7E,MAAOA,GAAIC,YAAYZ,6BAAAK,cAAcQ,KAAK,SAACC,GACvCA,EAAQC,gBAERD,EAAQE,aAAaC,kBAAkBV,MAAQ,aAE/CO,EAAQC,eAER,IAAIS,GAAWV,EAAQE,aAAaS,aAEpCnB,QAAOkB,GAAUE,cAAc","file":"vitalitySquaresProbability.spec.js","sourcesContent":["/// <reference path=\"./../../node_modules/angular2/angular2.d.ts\" />\r\n/// <reference path=\"./../../node_modules/angular2/testing.d.ts\" />\r\n\r\nimport {it, injectAsync, TestComponentBuilder} from 'angular2/testing';\r\n\r\nimport {VspComponent} from \"./vitalitySquaresProbability\";\r\n\r\nimport {getComponentMetadata} from \"./test/testUtilities\";\r\n\r\ndescribe('VspComponent', () => {\r\n\r\n    it('should have a title', () => {\r\n        let vspComponent = new VspComponent();\r\n        expect(vspComponent.title).toEqual('Vitality Squares Probability');\r\n    });\r\n    \r\n    it(\"the default title should be 'Vitality Squares Probability'\", injectAsync([TestComponentBuilder], (tcb) => {\r\n        return tcb.createAsync(VspComponent).then((fixture) => {\r\n                fixture.detectChanges();\r\n\r\n                expect(fixture.debugElement.componentInstance.title).toBe('Vitality Squares Probability');\r\n            });\r\n    }));\r\n\r\n\r\n    it(\"the template should contain the title\", () => {\r\n\r\n        let metadata = getComponentMetadata(VspComponent);\r\n\r\n        expect(metadata.template).toContain(\"{{title}}\");\r\n    });\r\n\r\n    it(\"the template should contain the probability-display component\", () => {\r\n\r\n        let metadata = getComponentMetadata(VspComponent);\r\n\r\n        expect(metadata.template).toContain(\"<probability-display>\");\r\n    });\r\n\r\n    it(\"the selector should be vsp\", () => {\r\n\r\n        let metadata = getComponentMetadata(VspComponent);\r\n\r\n        expect(metadata.selector).toBe(\"vsp\");\r\n    });\r\n\r\n    describe('with a custom title', () => {\r\n\r\n        it(\"the template should contain the title\", injectAsync([TestComponentBuilder], (tcb) => {\r\n            return tcb.createAsync(VspComponent).then((fixture) => {\r\n                fixture.detectChanges();\r\n\r\n                fixture.debugElement.componentInstance.title = \"Test Title\";\r\n\r\n                fixture.detectChanges();\r\n\r\n                var compiled = fixture.debugElement.nativeElement;\r\n                \r\n                expect(compiled).toContainText(\"Test Title\");\r\n            });\r\n        }));\r\n    });\r\n});"],"sourceRoot":"/source/"}